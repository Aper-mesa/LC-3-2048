.ORIG x3000
RAND_1: .FILL x0000
RAND_2: .FILL x0000
RAND_3: .FILL x0000
ZERO: .FILL x0000
ONE: .FILL x0001
NEXT_INT: .FILL x0077
RAND_A: .FILL x000B
RAND_C: .FILL x0013
RAND_M: .FILL x0088
MOD_FOUR: .FILL x0004
LCG_SR1: .FILL x0000
LCG_SR2: .FILL x0000
LCG_SR3: .FILL x0000
DIVIDEND: .FILL x0000
DIVISOR: .FILL x0000
QUOTIENT: .FILL x0000
REMAINDER: .FILL x0000
MOD_SR1: .FILL x0000
MOD_SR2: .FILL x0000
MOD_SR3: .FILL x0000
MOD_SR4: .FILL x0000
MULTIPLICAND: .FILL x0000
MULTIPLIER: .FILL x0008
MULTIPLY_SR1: .FILL x0000
MULTIPLY_SR2: .FILL x0000
MULTIPLY_SR3: .FILL x0000
MULTIPLY_SR4: .FILL x0000
MULTIPLY_RES: .FILL x0000
ASCIITEMP: .FILL x0030
TEMP_ADDRESS: .FILL x0000

LOOP_TIME: .FILL x0008
LOOP: ADD R3, R3, #0
      BRz ENDPROGRAM
      JSR LCG
      LD R0, NEXT_INT
      LD R1, ASCIITEMP
      ADD R0, R0, R1
      TRAP x21
      ADD R3, R3, #-1


LCG: ST R1, LCG_SR1
     ST R2, LCG_SR2
     ST R3, LCG_SR3
     LD R1, RAND_A
     LD R2, NEXT_INT
     ST R1, MULTIPLICAND
     ST R2, MULTIPLIER
     ST R7, TEMP_ADDRESS
     JSR MULTIPLY
     LD R7, TEMP_ADDRESS
     LD R3, RAND_C
     LD R2, MULTIPLY_RES
     ADD R3, R3, R2
     ST R3, DIVIDEND
     LD R2, RAND_M
     ST R2, DIVISOR
     ST R7, TEMP_ADDRESS
     JSR MOD
     LD R7, TEMP_ADDRESS
     LD R1, REMAINDER
     ST R1, DIVIDEND
     LD R1, MOD_FOUR
     ST R1, DIVISOR
     ST R7, TEMP_ADDRESS
     JSR MOD
     LD R7, TEMP_ADDRESS
     LD R1, REMAINDER
     ST R1, NEXT_INT
     BR LCG_DONE
LCG_RESET: LD R1, LCG_SR1
           LD R2, LCG_SR2
           LD R3, LCG_SR3
           RET
LCG_DONE: LD R1, LCG_SR1
          LD R2, LCG_SR2
          LD R3, LCG_SR3
          RET

MULTIPLY: ST R1, MULTIPLY_SR1
          ST R2, MULTIPLY_SR2
          ST R3, MULTIPLY_SR3
          ST R4, MULTIPLY_SR4
          LD R1, MULTIPLICAND
          LD R2, MULTIPLIER
          LD R3, ONE
          LD R4, ZERO
          NOT R3, R3
          ADD R3, R3, #1
MULTIPLY_LOOP: ADD R2, R2, #0
               BRz MULTIPLY_DONE
               ADD R4, R4, R1
               ADD R2, R2, R3
               BR MULTIPLY_LOOP
            
MULTIPLY_DONE: ST R4, MULTIPLY_RES
               LD R1, MULTIPLY_SR1
               LD R2, MULTIPLY_SR2
               LD R3, MULTIPLY_SR3
               LD R4, MULTIPLY_SR4
               RET
               

MOD: ST R1, MOD_SR1
     ST R2, MOD_SR2
     ST R3, MOD_SR3
     ST R4, MOD_SR4
     LD R1, DIVIDEND 
     LD R2, DIVISOR 
     AND R3, R3, #0  
     NOT R2, R2  
     ADD R2, R2, 1   
     ADD R4, R1, R2  
     BRn MOD_DONE
MOD_LOOP: ADD R1, R1, R2
      ADD R3, R3, #1
      ADD R4, R1, R2
      BRzp MOD_LOOP
MOD_DONE: ST R1, REMAINDER 
      LD R1, MOD_SR1
      LD R2, MOD_SR2
      LD R3, MOD_SR3
      LD R4, MOD_SR4
      RET
      
MOD_1: ST R1, MOD_SR1
     ST R2, MOD_SR2
     ST R3, MOD_SR3
     ST R4, MOD_SR4
     LD R1, DIVIDEND 
     LD R2, DIVISOR 
     AND R3, R3, #0  
     NOT R2, R2  
     ADD R2, R2, 1   
     ADD R4, R1, R2  
     BRn MOD_DONE_1
MOD_LOOP_1: ADD R1, R1, R2
      ADD R3, R3, #1
      ADD R4, R1, R2
      BRzp MOD_LOOP_1
MOD_DONE_1: ST R1, REMAINDER 
      LD R1, MOD_SR1
      LD R2, MOD_SR2
      LD R3, MOD_SR3
      LD R4, MOD_SR4
      RET
      
ENDPROGRAM: HALT
           .END
      